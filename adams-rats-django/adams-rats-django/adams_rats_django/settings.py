"""
Django settings for contactcollector project.

Generated by 'django-admin startproject' using Django 1.11.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
from collections import OrderedDict

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'fb)=urbietnazAsAt0nr-vij0dzg5u=#3#h%1tek&bs(h94vk'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'remote_control',
    'restart_backend',
    'adams_rats_django',
]

APPS_LIST = [
    'remote_control',
    'restart_backend',
]

APPS_SHORT = {
    'remote_control': 'Remote',
    'restart_backend': 'Restart',
}

APPS_LONG = {
    'remote_control': 'Remote control',
    'restart_backend': 'Restart backend',
}

APPS_PRODUCTION = {
    'remote_control': True,
    'restart_backend': True,
}

APPS_TYPE_NAME = OrderedDict()
APPS_TYPE_NAME['admin'] = 'Admin'

APPS_TYPE = {
    'remote_control': 'admin',
    'restart_backend': 'admin',
}

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'adams_rats_django.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            'adams_rats_django/templates'
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'debug': True,
        },
    },
]

WSGI_APPLICATION = 'adams_rats_django.wsgi.application'

# Redirect to home URL after login (Default redirects to /accounts/profile/)
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Pacific/Auckland'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/
STATIC_ROOT = '/var/www/html/adams_rats_django/static'
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    'adams_rats_django/static/',
]

# custom settings?
LOGGING_DEFAULT_HANDLERS_CONFIG = {}
LOGGING_DEFAULT_HANDLERS_LIST = []
LOGGING_DEFAULT_LEVEL = ''
try:
    import adams_rats_django.settings_custom

    print("Using custom settings from 'settings_custom.py'")

    DEBUG = adams_rats_django.settings_custom.DEBUG
    PRODUCTION = adams_rats_django.settings_custom.PRODUCTION
    LOGIN_REQUIRED = adams_rats_django.settings_custom.LOGIN_REQUIRED
    REMOTECONTROL_HOST = adams_rats_django.settings_custom.REMOTECONTROL_HOST
    RESTART_COMMAND = adams_rats_django.settings_custom.RESTART_COMMAND
    LOGGING_DEFAULT_HANDLERS_CONFIG = adams_rats_django.settings_custom.LOGGING_DEFAULT_HANDLERS_CONFIG
    LOGGING_DEFAULT_HANDLERS_LIST = adams_rats_django.settings_custom.LOGGING_DEFAULT_HANDLERS_LIST
    LOGGING_DEFAULT_LEVEL = adams_rats_django.settings_custom.LOGGING_DEFAULT_LEVEL

except ImportError:
    print("'settings_custom.py' not found, using default values!")

    DEBUG = False
    PRODUCTION = True
    LOGIN_REQUIRED = True
    REMOTECONTROL_HOST = "http://localhost:8081/"
    RESTART_COMMAND = None
    LOGGING_DEFAULT_HANDLERS_CONFIG = {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'default',
        },
    }
    LOGGING_DEFAULT_HANDLERS_LIST = ['console']
    LOGGING_DEFAULT_LEVEL = 'INFO'

# configure logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'default': {
            'format': '[%(levelname)s] %(asctime)s %(name)s %(funcName)s\n\t%(message)s'
        },
    },
}
LOGGING['handlers'] = LOGGING_DEFAULT_HANDLERS_CONFIG
LOGGING['loggers'] = dict()
applist = APPS_LIST[:]
applist.append('django')
applist.append('adams_rats_django')
for app in applist:
    LOGGING['loggers'][app] = {}
    LOGGING['loggers'][app]['handlers'] = LOGGING_DEFAULT_HANDLERS_LIST[:]
    LOGGING['loggers'][app]['level'] = LOGGING_DEFAULT_LEVEL
if RESTART_COMMAND is None:
    APPS_LIST.remove('restart_backend')
